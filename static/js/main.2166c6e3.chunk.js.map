{"version":3,"sources":["component/Emoji.js","component/Data.js","component/Search.js","App.js","reportWebVitals.js","index.js"],"names":["Emoji","name","icon","Data","props","state","emojidata","this","map","item","emoji","Component","Search","useState","setName","setEmoji","type","onChange","e","target","value","className","onClick","preventDefault","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kPAWeA,EATH,SAAC,GAAe,IAAdC,EAAa,EAAbA,KAAKC,EAAQ,EAARA,KAEf,OACI,gCACI,6BAAKD,IACL,8CAAiBC,SCqCdC,E,kDAxCX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACRC,UAAU,CACT,CAAE,KAAO,eAAM,KAAQ,iBACvB,CAAE,KAAO,eAAM,KAAQ,aACvB,CAAE,KAAO,eAAM,KAAQ,4BACvB,CAAE,KAAO,eAAM,KAAQ,0BACvB,CAAE,KAAO,eAAM,KAAQ,cACvB,CAAE,KAAO,eAAM,KAAQ,YACvB,CAAE,KAAO,eAAM,KAAQ,cACvB,CAAE,KAAO,qBAAO,KAAQ,QACxB,CAAE,KAAO,eAAM,KAAQ,UACvB,CAAE,KAAO,eAAM,KAAQ,YACvB,CAAC,KAAO,eAAM,KAAQ,aACtB,CAAC,KAAO,eAAM,KAAQ,0BACtB,CAAC,KAAO,eAAM,KAAQ,mBACtB,CAAC,KAAO,iCAAS,KAAQ,gBACzB,CAAC,KAAO,iCAAS,KAAQ,sBACzB,CAAC,KAAO,iCAAS,KAAQ,YACzB,CAAC,KAAO,iCAAS,KAAQ,SACzB,CAAC,KAAO,eAAM,KAAQ,WArBb,E,0CA0BjB,WAAU,IAAD,OACP,OACE,8BACGC,KAAKF,MAAMC,UAAUE,KAAI,SAACC,GAAD,OACtBA,EAAKR,MAAM,EAAKG,MAAMM,MACtB,cAAC,EAAD,CAAOT,KAAMQ,EAAKR,KACdC,KAAMO,EAAKP,OAEd,c,GApCES,aC4BJC,G,MA3BD,WAAK,IAAD,EAEOC,mBAAS,IAFhB,mBAEPZ,EAFO,KAEFa,EAFE,OAGSD,mBAAS,IAHlB,mBAGPH,EAHO,KAGDK,EAHC,KAWd,OACI,gCACI,iCACI,qDAA+B,uBAC/B,uBAAOC,KAAK,OAAOC,SAXhB,SAACC,GACZJ,EAAQI,EAAEC,OAAOC,UAU+B,uBACxC,uBAHJ,IAGU,wBAAQJ,KAAK,SAASK,UAAU,kBAAkBC,QATlD,SAACJ,GACfH,EAASd,GACTiB,EAAEK,kBAOY,uBAEV,8BACY,IAAPb,EACD,cAAC,EAAD,CAAMA,MAAOA,IACZ,YCbFc,MARf,WACE,OACE,qBAAKH,UAAU,MAAf,SACE,cAAC,EAAD,OCMSI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.2166c6e3.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Emoji=({name,icon})=>{\r\n   \r\n    return(\r\n        <div>\r\n            <h1>{name}</h1>\r\n            <h2>emoji icon :{icon}</h2>\r\n        </div>\r\n    )\r\n}\r\nexport default Emoji;","import React ,{Component, useState} from 'react'\r\nimport Emoji from './Emoji';\r\nclass Data extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n             emojidata:[\r\n              { \"icon\":'😀', \"name\": 'grinning face',},\r\n              { \"icon\":'😃', \"name\": 'smileeyes',},\r\n              { \"icon\":'😅', \"name\": 'grinning face with sweat',},\r\n              { \"icon\":'😂', \"name\": 'face with tears of joy',},\r\n              { \"icon\":'🥰', \"name\": 'smileheart',},\r\n              { \"icon\":'❤️', \"name\": 'redheart',},\r\n              { \"icon\":'🤚', \"name\": 'raisedhand',},\r\n              { \"icon\":'🖐️', \"name\": 'hand',},\r\n              { \"icon\":'👌', \"name\": 'okhand',},\r\n              { \"icon\":'🥵', \"name\": 'hot face',},\r\n              {\"icon\":'🥶', \"name\": 'cold face',},\r\n              {\"icon\":'☹️', \"name\": 'slightly frowning face',},\r\n              {\"icon\":'🙍', \"name\": 'person frowning',},\r\n              {\"icon\":'🙍‍♂️', \"name\": 'man frowning',},\r\n              {\"icon\":'🙆‍♀️', \"name\": 'woman gesturing OK',},\r\n              {\"icon\":'🧑‍🎓', \"name\": 'mx claus',},\r\n              {\"icon\":'🧑‍🎄', \"name\": 'x-mas',},\r\n              {\"icon\":'🧚', \"name\": 'fairy',},\r\n             ]\r\n        \r\n        }\r\n      }\r\n      render() {\r\n        return (\r\n          <div>\r\n            {this.state.emojidata.map((item)=>(\r\n                item.name==this.props.emoji?\r\n                <Emoji name={item.name}\r\n                    icon={item.icon}\r\n                />\r\n                :null\r\n            ))}\r\n          </div>\r\n        );\r\n      }\r\n    }\r\nexport default Data;","import React, { useState } from 'react';\r\nimport Data from './Data';\r\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css'\r\nconst Search =()=>{\r\n\r\n    const [name,setName]=useState(\"\");\r\n    const [emoji,setEmoji]=useState(\"\");\r\n    const onChange=(e)=>{\r\n        setName(e.target.value);\r\n      };\r\n      const onSubmit =(e) =>{\r\n        setEmoji(name);\r\n        e.preventDefault();  \r\n      }\r\n    return(\r\n        <div>\r\n            <form >\r\n                <label>Enter Emoji Name</label><br/>\r\n                <input type=\"text\" onChange={onChange}/><br/>\r\n                <br/> <button type=\"submit\" className=\"btn btn-primary\" onClick={onSubmit}>Submit</button>\r\n            </form>\r\n            <div>\r\n                {emoji!=\"\"?\r\n                <Data emoji={emoji}/>    \r\n                :null }\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n};\r\nexport default Search; ","\nimport './App.css';\nimport Search from './component/Search'\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Search />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}